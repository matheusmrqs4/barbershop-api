{
    "openapi": "3.0.0",
    "info": {
        "title": "BarberShop API",
        "description": "Appointment Scheduling System for Barbershops.",
        "contact": {
            "url": "https://github.com/matheusmrqs4"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0.0"
    },
    "paths": {
        "/api/barber-shop/register": {
            "post": {
                "tags": [
                    "BarberShop Authentication"
                ],
                "summary": "BarberShop Register",
                "operationId": "register",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "BarberShop name",
                                        "type": "string"
                                    },
                                    "email": {
                                        "description": "BarberShop email",
                                        "type": "string"
                                    },
                                    "password": {
                                        "description": "BarberShop password",
                                        "type": "string"
                                    },
                                    "adress1": {
                                        "description": "BarberShop Address line 1",
                                        "type": "string"
                                    },
                                    "adress2": {
                                        "description": "BarberShop Address line 2",
                                        "type": "string"
                                    },
                                    "adress3": {
                                        "description": "BarberShop Address line 3",
                                        "type": "string"
                                    },
                                    "bio": {
                                        "description": "BarberShop Biography",
                                        "type": "string"
                                    },
                                    "phone": {
                                        "description": "BarberShop Phone",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "403": {
                        "description": "Invalid credentials"
                    }
                }
            }
        },
        "/api/barber-shop/login": {
            "post": {
                "tags": [
                    "BarberShop Authentication"
                ],
                "summary": "BarberShop Login",
                "operationId": "login",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "description": "BarberShop email",
                                        "type": "string"
                                    },
                                    "password": {
                                        "description": "BarberShop password",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "message": {
                                                    "type": "string"
                                                },
                                                "token": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid credentials"
                    },
                    "500": {
                        "description": "An error occurred when trying to log in"
                    }
                }
            }
        },
        "/api/barber-shop/refresh": {
            "post": {
                "tags": [
                    "BarberShop Authentication"
                ],
                "summary": "Refresh BarberShop Token",
                "operationId": "refresh",
                "responses": {
                    "200": {
                        "description": "Token refreshed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "message": {
                                                    "type": "string"
                                                },
                                                "token": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error occurred when trying to refresh token"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/barber-shop/logout": {
            "post": {
                "tags": [
                    "BarberShop Authentication"
                ],
                "summary": "Logout BarberShop",
                "operationId": "logout",
                "responses": {
                    "200": {
                        "description": "Logout successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error occurred when trying to logout"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/barber-shop/profile": {
            "get": {
                "tags": [
                    "BarberShop Profile"
                ],
                "summary": "Get BarberShop Profile",
                "operationId": "profile",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "barber_shop": {
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Error fetching profile"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/barber-shop/update-profile": {
            "put": {
                "tags": [
                    "BarberShop Profile"
                ],
                "summary": "Update BarberShop Profile",
                "operationId": "updateProfile",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "BarberShop name",
                                        "type": "string"
                                    },
                                    "phone": {
                                        "description": "BarberShop phone",
                                        "type": "string"
                                    },
                                    "address1": {
                                        "description": "BarberShop Address line 1",
                                        "type": "string"
                                    },
                                    "address2": {
                                        "description": "BarberShop Address line 2",
                                        "type": "string"
                                    },
                                    "address3": {
                                        "description": "BarberShop Address line 3",
                                        "type": "string"
                                    },
                                    "bio": {
                                        "description": "BarberShop biography",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Profile updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "message": {
                                                    "type": "string"
                                                },
                                                "barber_shop": {
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Error updating profile"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/user/register": {
            "post": {
                "tags": [
                    "User Authentication"
                ],
                "summary": "User Register",
                "operationId": "registerUser",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "User name",
                                        "type": "string"
                                    },
                                    "email": {
                                        "description": "User email",
                                        "type": "string"
                                    },
                                    "password": {
                                        "description": "User password",
                                        "type": "string"
                                    },
                                    "phone": {
                                        "description": "User phone",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successfully registered",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "message": {
                                                    "type": "string"
                                                },
                                                "user": {
                                                    "type": "object"
                                                },
                                                "token": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error creating new User"
                    }
                }
            }
        },
        "/api/user/login": {
            "post": {
                "tags": [
                    "User Authentication"
                ],
                "summary": "User Login",
                "operationId": "loginUser",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "description": "User email",
                                        "type": "string"
                                    },
                                    "password": {
                                        "description": "User password",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "message": {
                                                    "type": "string"
                                                },
                                                "token": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid credentials"
                    },
                    "500": {
                        "description": "An error occurred when trying to log in"
                    }
                }
            }
        },
        "/api/user/refresh": {
            "post": {
                "tags": [
                    "User Authentication"
                ],
                "summary": "Refresh User Token",
                "operationId": "refreshUserToken",
                "responses": {
                    "200": {
                        "description": "Token refreshed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "message": {
                                                    "type": "string"
                                                },
                                                "token": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error occurred when trying to refresh token"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/user/logout": {
            "post": {
                "tags": [
                    "User Authentication"
                ],
                "summary": "User Logout",
                "operationId": "logoutUser",
                "responses": {
                    "200": {
                        "description": "Logout successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error occurred when trying to logout"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/user/appointments": {
            "get": {
                "tags": [
                    "User Authentication"
                ],
                "summary": "Get User Appointments",
                "operationId": "getUserAppointments",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "user": {
                                                    "type": "object"
                                                },
                                                "appointments": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "An error occurred when trying to get appointments"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/user/profile": {
            "get": {
                "tags": [
                    "User Profile"
                ],
                "summary": "Get User Profile",
                "operationId": "getUserProfile",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "email": {
                                            "type": "string"
                                        },
                                        "phone": {
                                            "type": "string"
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Error fetching profile"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/user/update-profile": {
            "post": {
                "tags": [
                    "User Profile"
                ],
                "summary": "Update User Profile",
                "operationId": "updateUserProfile",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "User name",
                                        "type": "string"
                                    },
                                    "phone": {
                                        "description": "User phone",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Profile updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "message": {
                                                    "type": "string"
                                                },
                                                "user": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer"
                                                        },
                                                        "name": {
                                                            "type": "string"
                                                        },
                                                        "email": {
                                                            "type": "string"
                                                        },
                                                        "phone": {
                                                            "type": "string"
                                                        },
                                                        "created_at": {
                                                            "type": "string",
                                                            "format": "date-time"
                                                        },
                                                        "updated_at": {
                                                            "type": "string",
                                                            "format": "date-time"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Error updating profile"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/create-appointment": {
            "post": {
                "tags": [
                    "Appointment"
                ],
                "summary": "Create an appointment",
                "operationId": "createAppointment",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "properties": {
                                    "schedules_id": {
                                        "description": "ID of the schedule",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Appointment created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "appointment": {
                                                    "properties": {
                                                        "status": {
                                                            "type": "boolean"
                                                        },
                                                        "message": {
                                                            "type": "string"
                                                        },
                                                        "appointment": {
                                                            "properties": {
                                                                "id": {
                                                                    "type": "integer"
                                                                },
                                                                "users_id": {
                                                                    "type": "integer"
                                                                },
                                                                "schedules_id": {
                                                                    "type": "integer"
                                                                },
                                                                "services_id": {
                                                                    "type": "integer"
                                                                },
                                                                "barbers_id": {
                                                                    "type": "integer"
                                                                },
                                                                "schedule_time": {
                                                                    "type": "string",
                                                                    "format": "date-time"
                                                                },
                                                                "created_at": {
                                                                    "type": "string",
                                                                    "format": "date-time"
                                                                },
                                                                "updated_at": {
                                                                    "type": "string",
                                                                    "format": "date-time"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "barber": {
                                                            "type": "object"
                                                        },
                                                        "service": {
                                                            "type": "object"
                                                        },
                                                        "schedule": {
                                                            "type": "string",
                                                            "format": "date-time"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Schedule unavailable or error finding associated entities"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/show-appointment/{appointment}": {
            "get": {
                "tags": [
                    "Appointment"
                ],
                "summary": "Get details of an appointment",
                "operationId": "showAppointment",
                "parameters": [
                    {
                        "name": "appointment",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Appointment details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "message": {
                                                    "type": "string"
                                                },
                                                "appointment": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer"
                                                        },
                                                        "users_id": {
                                                            "type": "integer"
                                                        },
                                                        "schedules_id": {
                                                            "type": "integer"
                                                        },
                                                        "services_id": {
                                                            "type": "integer"
                                                        },
                                                        "barbers_id": {
                                                            "type": "integer"
                                                        },
                                                        "schedule_time": {
                                                            "type": "string",
                                                            "format": "date-time"
                                                        },
                                                        "created_at": {
                                                            "type": "string",
                                                            "format": "date-time"
                                                        },
                                                        "updated_at": {
                                                            "type": "string",
                                                            "format": "date-time"
                                                        },
                                                        "barbers": {
                                                            "type": "object"
                                                        },
                                                        "services": {
                                                            "type": "object"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Error fetching appointment details"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/barber": {
            "get": {
                "tags": [
                    "Barber"
                ],
                "summary": "Get all barbers",
                "operationId": "12982a6695233ef3f9f590fc3ed853bf",
                "responses": {
                    "200": {
                        "description": "Returns all posts with related user and comments",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "barbers": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer"
                                                            },
                                                            "description": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Barber"
                ],
                "summary": "Create a new Barber",
                "operationId": "a5cfd664cae09a73a7e263383cd3b7a4",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "name",
                                    "image"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "Name of the barber",
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "image": {
                                        "description": "Image file of the barber",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Barber created successfully"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/barber/{barber}": {
            "get": {
                "tags": [
                    "Barber"
                ],
                "summary": "Get a specific barber",
                "operationId": "477f36ca7109e460b309dfa67b86c49f",
                "parameters": [
                    {
                        "name": "barber",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Barber details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Error getting barber"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Barber"
                ],
                "summary": "Update a specific barber",
                "operationId": "437212598eae77021f74c96e498085ab",
                "parameters": [
                    {
                        "name": "barber",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Barber updated successfully"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Barber"
                ],
                "summary": "Delete a specific barber",
                "operationId": "12c9753842361e259ba694e0c7feb9b9",
                "parameters": [
                    {
                        "name": "barber",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Barber deleted successfully"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Error deleting barber"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/dashboard": {
            "get": {
                "tags": [
                    "Dashboard"
                ],
                "summary": "Get dashboard data",
                "operationId": "75b13a1e6854cf8e6e230bee8d214186",
                "responses": {
                    "200": {
                        "description": "Dashboard data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "barbers": {
                                                    "type": "object"
                                                },
                                                "services": {
                                                    "type": "object"
                                                },
                                                "schedules": {
                                                    "type": "object"
                                                },
                                                "appointments": {
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Error getting dashboard"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/appointment/{appointment}/evaluate": {
            "post": {
                "tags": [
                    "Evaluation"
                ],
                "summary": "Submit a new evaluation",
                "operationId": "01f4a43ea148d9ffe085c76b46c3a305",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "appointments_id",
                                    "comment",
                                    "grade"
                                ],
                                "properties": {
                                    "appointments_id": {
                                        "description": "ID of the appointment",
                                        "type": "integer",
                                        "example": "1"
                                    },
                                    "comment": {
                                        "description": "Comment for the evaluation",
                                        "type": "string",
                                        "example": "Great service!"
                                    },
                                    "grade": {
                                        "description": "Grade given for the appointment",
                                        "type": "integer",
                                        "example": "5"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Evaluation submitted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "message": {
                                                    "type": "string",
                                                    "example": "Evaluation submitted successfully"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - Invalid data provided"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden - User is not authorized to evaluate this appointment"
                    },
                    "404": {
                        "description": "Not Found - Appointment not found"
                    },
                    "500": {
                        "description": "Error submitting evaluation"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/evaluation/{evaluation}": {
            "get": {
                "tags": [
                    "Evaluation"
                ],
                "summary": "Get details of a specific evaluation",
                "operationId": "f2a28d8fe7f03803b7b4b19ff8214c15",
                "parameters": [
                    {
                        "name": "evaluation",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Evaluation details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - Evaluation not found"
                    },
                    "500": {
                        "description": "Error fetching evaluation"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/schedule": {
            "get": {
                "tags": [
                    "Schedules"
                ],
                "summary": "Get all schedules",
                "operationId": "38e3505230092f3ea374d831c89d98ee",
                "responses": {
                    "200": {
                        "description": "List of schedules",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "schedule": {
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Error getting schedules"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Schedules"
                ],
                "summary": "Create schedules",
                "operationId": "6f92f6b5ddc1d6faed11624f1753c7ab",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "barbers_id",
                                    "services_id"
                                ],
                                "properties": {
                                    "barbers_id": {
                                        "description": "ID of the barber for whom to create schedules",
                                        "type": "integer"
                                    },
                                    "services_id": {
                                        "description": "ID of the service to assign to schedules",
                                        "type": "integer"
                                    },
                                    "days": {
                                        "description": "Number of days to add schedules for (default: 3)",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Schedules creation process started successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "message": {
                                                    "type": "string",
                                                    "example": "Schedules creation process started successfully"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Barber ID or Services ID is required"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Barber not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Barber not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error create schedules"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/schedule/{schedule}": {
            "get": {
                "tags": [
                    "Schedules"
                ],
                "summary": "Get schedule by ID",
                "operationId": "7c7c10600c69f8a6e17964bbb27f3de8",
                "parameters": [
                    {
                        "name": "schedule",
                        "in": "path",
                        "description": "ID of the schedule",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Schedule found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "schedule": {}
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Schedule not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Schedule not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error getting schedule"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Schedules"
                ],
                "summary": "Update schedule",
                "operationId": "af9d23a59cfee9ea5b79e4cb29dd240c",
                "parameters": [
                    {
                        "name": "schedule",
                        "in": "path",
                        "description": "ID of the schedule",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "services_id": {
                                        "description": "ID of the service",
                                        "type": "integer"
                                    },
                                    "barbers_id": {
                                        "description": "ID of the barber",
                                        "type": "integer"
                                    },
                                    "schedule": {
                                        "description": "Schedule date and time",
                                        "type": "string",
                                        "format": "date-time"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Schedule updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "message": {
                                                    "type": "string",
                                                    "example": "Schedule updated successfully"
                                                },
                                                "schedule": {}
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Validation error"
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "services_id": [
                                                    "The services id field is required."
                                                ],
                                                "barbers_id": [
                                                    "The barbers id field is required."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Schedule not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Schedule not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error update schedule"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Schedules"
                ],
                "summary": "Delete schedule",
                "operationId": "701a04917dd937cec3850a695f6ed024",
                "parameters": [
                    {
                        "name": "schedule",
                        "in": "path",
                        "description": "ID of the schedule",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Schedule deleted successfully"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Schedule not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Schedule not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error delete schedule"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/service": {
            "get": {
                "tags": [
                    "Service"
                ],
                "summary": "Get all services",
                "operationId": "c64e8ac186addf27a785e0868d03e56d",
                "responses": {
                    "200": {
                        "description": "Returns all services",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error getting services"
                    }
                }
            },
            "post": {
                "tags": [
                    "Service"
                ],
                "summary": "Create a new service",
                "operationId": "c8bc4d1eaf96771fce3e51258cb82e1e",
                "requestBody": {
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Service created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "message": {
                                                    "type": "string",
                                                    "example": "Service created successfully"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - Invalid data provided"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden - Barber shop not authorized"
                    },
                    "404": {
                        "description": "Not Found - Barber not found"
                    },
                    "500": {
                        "description": "Error creating service"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/service/{service}": {
            "get": {
                "tags": [
                    "Service"
                ],
                "summary": "Get details of a specific service",
                "operationId": "e9ffe952610bcca70fd1b77a14625e65",
                "parameters": [
                    {
                        "name": "service",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Service details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - Service not found"
                    },
                    "500": {
                        "description": "Error getting service"
                    }
                }
            },
            "put": {
                "tags": [
                    "Service"
                ],
                "summary": "Update a specific service",
                "operationId": "8149da2e1f15b9121cf0df0b5f09e3d1",
                "parameters": [
                    {
                        "name": "service",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Service updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "message": {
                                                    "type": "string",
                                                    "example": "Service updated successfully"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - Invalid data provided"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden - Barber shop not authorized"
                    },
                    "404": {
                        "description": "Not Found - Service not found"
                    },
                    "500": {
                        "description": "Error updating service"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Service"
                ],
                "summary": "Delete a specific service",
                "operationId": "ee85a5cfd4bdac2e9adfab2e5b49aac0",
                "parameters": [
                    {
                        "name": "service",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Service deleted successfully"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden - Barber shop not authorized"
                    },
                    "404": {
                        "description": "Not Found - Service not found"
                    },
                    "500": {
                        "description": "Error deleting service"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "responses": {
            "401": {
                "description": "Unauthorized"
            },
            "500": {
                "description": "Error creating barber"
            },
            "403": {
                "description": "Unauthorized"
            },
            "501": {
                "description": "Error updating barber"
            }
        }
    }
}